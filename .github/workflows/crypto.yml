name: Crypto

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - ".github/workflows/crypto.yml"
      - "crates/crypto/**"
      - "Cargo.*"
  workflow_dispatch:

defaults:
  run:
    working-directory: crates/crypto

permissions:
  contents: read

env:
  RUSTFLAGS: "-Dwarnings"
  MSRV: 1.72.0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        include:
          - target: i686-unknown-linux-gnu
            platform: ubuntu-latest
            deps: sudo apt update && sudo apt install gcc-multilib
            rust: stable

          - target: x86_64-unknown-linux-gnu
            platform: ubuntu-latest
            rust: $MSRV

          - target: x86_64-unknown-linux-gnu
            platform: ubuntu-latest
            rust: stable

          - target: x86_64-unknown-linux-gnu
            platform: ubuntu-latest
            rust: nightly

          - target: x86_64-apple-darwin
            platform: macos-latest
            rust: stable

          - target: x86_64-pc-windows-msvc
            platform: windows-latest
            rust: stable
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - run: ${{ matrix.deps }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - name: Install `nextest`
        uses: taiki-e/install-action@nextest
      - run: cargo nextest run --target ${{ matrix.target }} --run-ignored all --all-features --release

  test-arm:
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            rust: stable
          - target: armv7-unknown-linux-gnueabi
            rust: stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      - run: cargo test --target ${{ matrix.target }} --all-features --release

  check-features:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            platform: ubuntu-latest
            rust: stable

          - target: x86_64-apple-darwin
            platform: macos-latest
            rust: stable

          - target: x86_64-pc-windows-msvc
            platform: windows-latest
            rust: stable
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - run: ${{ matrix.deps }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - name: Install `cargo-hack`
        uses: taiki-e/install-action@cargo-hack
      - run: cargo hack check --feature-powerset --target ${{ matrix.target }}
